@import '../mixins';

/** The container for the CodeMirror element. */
.diff-code-mirror {
  flex-grow: 1;
  min-width: 0;
}

.diff-code-mirror .CodeMirror {
  height: 100%;
  color: var(--diff-text-color);
  background: var(--background-color);
  font-size: var(--font-size-sm);
  font-family: var(--font-family-monospace);

  span {
    // Force word breaks. This only matters when soft wrapping is on.
    word-break: break-all;
  }

  pre {
    border: none;
    padding: 0;
  }

  // Remove blank space at the top of the diff
  &-lines {
    padding: 0;
  }

  &-line {
    display: flex;
    padding: 0;

    // The last immediate `span` is the actual content class.
    > span:last-child {
      // Add a little bit of space to the left of code diff
      // `padding-left` here means mouse move events are not raised
      padding-left: var(--spacing-half);
      padding-top: var(--diff-line-padding-y);
      padding-bottom: var(--diff-line-padding-y);
      display: inline-block;
    }

    svg.no-newline {
      height: 8px;
      fill: var(--error-color);
      display: inline-block;
      margin-left: 3px;
      margin-bottom: -1px;
    }
  }

  &-code > div:last-of-type {
    // Add a border to the end of the diff
    border-bottom: var(--base-border);
  }
}

// The container element which holds the before and after
// diff-line-number spans.
.diff-line-gutter {
  display: flex;
  height: 100%;
  background: var(--diff-gutter-background-color);

  &.diff-add {
    background: var(--diff-add-gutter-background-color);
  }

  &.diff-delete {
    background: var(--diff-delete-gutter-background-color);
  }

  &.diff-hunk {
    background: var(--diff-hunk-gutter-background-color);
  }

  .before {
    border-right: 1px solid var(--diff-border-color);
  }

  .after {
    border-right: 4px solid var(--diff-border-color);
  }

  &.read-only .after {
    border-right-width: 1px;
  }
}

.diff-line-number {
  display: inline-block;
  color: var(--diff-line-number-color);
  width: var(--diff-line-number-column-width);
  padding: var(--diff-line-padding-y) var(--spacing-half);
  text-align: right;
}

.CodeMirror-linebackground {
  &.diff-add {
    background: var(--diff-add-background-color);
  }

  &.diff-delete {
    background: var(--diff-delete-background-color);
  }

  &.diff-context {
    background: var(--background-color);
  }

  &.diff-hunk {
    background: var(--diff-hunk-background-color);
  }
}

.CodeMirror pre.diff-add {
  color: var(--diff-add-text-color);
  padding: 0;

  .diff-line-number {
    border-color: var(--diff-add-border-color);

    &:last-child {
      border-color: var(--diff-add-gutter-color);
    }
  }
}

.CodeMirror pre.diff-delete {
  color: var(--diff-delete-text-color);
  padding: 0;

  .diff-line-number {
    border-color: var(--diff-delete-border-color);

    &:last-child {
      border-color: var(--diff-delete-gutter-color);
    }
  }
}

.CodeMirror pre.diff-context {
  color: var(--diff-text-color);
  padding: 0;

  .diff-line-number {
    border-color: var(--diff-border-color);

    &:last-child {
      border-color: var(--diff-gutter-color);
    }
  }
}

// The cm- prefix means it's styling the line content.
.cm-diff-hunk {
  color: var(--diff-hunk-text-color);
}

.cm-diff-delete {
  color: var(--diff-delete-text-color);
}

.cm-diff-delete-inner {
  background: var(--diff-delete-inner-background-color);
}

.cm-diff-add {
  color: var(--diff-add-text-color);
}

.cm-diff-add-inner {
  background: var(--diff-add-inner-background-color);
}

.cm-diff-context {
  color: var(--diff-text-color);
}

.CodeMirror pre.diff-hunk {
  color: var(--diff-hunk-text-color);
  padding: 0;

  .diff-line-number {
    border-color: var(--diff-hunk-border-color);

    &:last-child {
      border-color: var(--diff-hunk-gutter-color);
    }
  }
}

.CodeMirror pre.CodeMirror-line .diff-line-selected {
  .diff-line-number {
    background: var(--diff-selected-background-color);
    border-color: var(--diff-selected-border-color);
    color: var(--diff-selected-text-color);

    &:last-child {
      border-color: var(--diff-selected-gutter-color);
    }
  }
}

.CodeMirror pre.CodeMirror-line .diff-line-hover {
  .diff-line-number {
    background: var(--diff-hover-background-color);
    border-color: var(--diff-hover-border-color);
    color: var(--diff-hover-text-color);

    &:last-child {
      border-color: var(--diff-hover-gutter-color);
    }
  }

  &:not(.diff-line-selected) {
    &.diff-add {
      .diff-line-number {
        background: var(--diff-add-hover-background-color);
        border-color: var(--diff-add-hover-border-color);
        color: var(--diff-add-hover-text-color);

        &:last-child {
          border-color: var(--diff-add-hover-gutter-color);
        }
      }
    }

    &.diff-delete {
      .diff-line-number {
        background: var(--diff-delete-hover-background-color);
        border-color: var(--diff-delete-hover-border-color);
        color: var(--diff-delete-hover-text-color);

        &:last-child {
          border-color: var(--diff-delete-hover-gutter-color);
        }
      }
    }
  }
}

#diff .panel {
  padding-top: var(--spacing);
}

#diff .image-header {
  padding: var(--spacing) 0 var(--spacing-half) 0;
  margin-left: auto;
  margin-right: auto;
  flex-shrink: 0;
}

#diff img {
  max-width: 100%;
  max-height: 100%;
  min-width: 0;
  min-height: 0;
  object-fit: contain;
  padding: 0;
}
// ***************************************************************************************************************************
.panel.image {
  display: flex;
  flex: 1;
  padding-top: 10px;

  .tab-bar {
    width: 350px;
    margin: 10px auto 0;
  }

  .image-diff-previous {
    color: var(--color-deleted);
  }
  .image-diff-current {
    color: var(--color-new);
  }

  .image-diff-previous,
  .image-diff-current {
    text-align: center;

    img {
      @include checkboard-background;
      border: 1px solid currentColor;
    }
  }

  .image-diff-header {
    font-weight: var(--font-weight-semibold);
    padding-bottom: 10px;
  }

  .image-diff-footer {
    color: var(--text-secondary-color);
    .strong {
      font-weight: var(--font-weight-semibold);
    }
  }
}

.image-diff-container {
  display: flex;
  flex: 1;
  justify-content: center;
  align-items: center;
  flex-direction: column;

  .image-diff-two-up {
    display: flex;
    align-items: center;

    .image-diff-previous {
      margin-right: var(--spacing-half);
      margin-bottom: var(--spacing-half);
    }
    .image-diff-current {
      margin-left: var(--spacing-half);
      margin-bottom: var(--spacing-half);
    }
  }

  .image-diff-summary {
    color: var(--text-secondary-color);
    font-weight: var(--font-weight-semibold);
    .added {
      color: var(--color-new);
    }
    .removed {
      color: var(--color-deleted);
    }
  }
}

.image-diff-difference {
  display: flex;
  flex-direction: column;
  flex: 1;

  .sizing-container {
    flex: 1;
    display: flex;
    justify-content: center;
    align-items: center;

    .image-container {
      position: relative;

      .image-diff-previous,
      .image-diff-current {
        position: absolute;
        top: 0;
        left: 0;
        img : {
          border: 0;
          background: transparent;
        }
      }
    }
  }
}

.image-diff-onion-skin {
  display: flex;
  flex-direction: column;
  flex: 1;

  .slider {
    align-self: center;
  }

  .sizing-container {
    margin: 0;
    margin-bottom: var(--spacing-half);
    flex: 1;
    display: flex;
    justify-content: center;
    align-items: center;

    .image-diff-previous,
    .image-diff-current {
      position: absolute;
      margin: 0;
      overflow: hidden;

      img {
        border: 0;
        background: transparent;
      }
    }

    .image-diff-previous {
      border: 1px solid var(--color-deleted);
    }
    .image-diff-current {
      border: 1px solid var(--color-new);
    }

    .image-container {
      @include checkboard-background;
      position: relative;
    }
  }
}

.image-diff-swipe {
  display: flex;
  flex-direction: column;
  flex: 1;

  .slider {
    align-self: center;
  }

  .sizing-container {
    margin: 0;
    margin-bottom: var(--spacing-half);
    flex: 1;
    display: flex;
    justify-content: center;
    align-items: center;

    .image-container {
      position: relative;

      .image-diff-previous,
      .image-diff-current {
        @include checkboard-background;
        position: absolute;
        margin: 0;
        overflow: hidden;

        img {
          border: 0;
          background: transparent;
        }
      }

      .image-diff-previous {
        border: 1px solid var(--color-deleted);
        right: 0;
      }
      .image-diff-current {
        border: 1px solid var(--color-new);
      }

      .swiper {
        border-left: 1px solid var(--text-secondary-color);
        margin: 0;
        overflow: hidden;
        position: absolute;
        right: 0;
      }
    }
  }
}

// Syntax higlighting. Adapted from
// https://github.com/primer/github-syntax-light/blob/5aeffad2559647286080328436156c4904a9785b/lib/github-light.css
.cm-s-default {
  .cm-variable {
    color: var(--syntax-variable-color);
  }

  .cm-keyword {
    color: var(--syntax-keyword-color);
  }

  .cm-atom {
    color: var(--syntax-atom-color);
  }
  .cm-number {
    color: inherit;
  }

  .cm-def {
    color: inherit;
  }

  .cm-variable-2,
  .cm-variable-3 {
    color: var(--syntax-alt-variable-color);
  }
  .cm-comment,
  .cm-meta {
    color: var(--syntax-comment-color);
  }
  .cm-string,
  .cm-string-2 {
    color: var(--syntax-string-color);

    &.cm-property {
      color: inherit;
    }
  }
  .cm-qualifier {
    color: var(--syntax-qualifier-color);
  }
  .cm-type {
    color: var(--syntax-type-color);
  }
  .cm-builtin {
    color: inherit;
  }
  .cm-bracket {
    color: inherit;
  }
  .cm-tag {
    color: var(--syntax-tag-color);
  }
  .cm-attribute {
    color: var(--syntax-attribute-color);
  }
  .cm-hr {
    color: inherit;
  }
  .cm-link {
    text-decoration: underline;
    color: var(--syntax-link-color);
  }

  // Intra line markings takes precedence over syntax highlighting.
  .cm-diff-delete-inner {
    color: var(--diff-delete-text-color);
  }

  .cm-diff-add-inner {
    color: var(--diff-add-text-color);
  }

  .cm-m-css {
    &.cm-property {
      color: var(--syntax-atom-color);
    }
  }

  .cm-m-shell {
    &.cm-builtin {
      color: var(--syntax-atom-color);
    }
  }

  .cm-m-javascript {
    &.cm-type {
      color: var(--syntax-variable-color);
    }
  }
}
